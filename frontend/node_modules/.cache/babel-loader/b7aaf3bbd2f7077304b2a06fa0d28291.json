{"ast":null,"code":"var _jsxFileName = \"D:\\\\CryptoImage\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport Encode from './Encode';\nimport Decode from './Decode';\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\nimport Display from './Display';\nimport Redirect from './Redirect';\nimport anime from 'animejs/lib/anime.es';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      receivedMsg: '',\n      receivedImg: ''\n    };\n\n    this.encodeImg = receivedImg => {\n      this.setState({\n        receivedImg: receivedImg\n      });\n    };\n\n    this.decodeMsg = receivedMsg => {\n      this.setState({\n        receivedMsg: receivedMsg\n      });\n    };\n\n    this.resetState = () => {\n      this.setState({\n        receivedMsg: '',\n        receivedImg: ''\n      });\n    };\n\n    this.loadMainDisplayAnime = () => {\n      const mainDisplay = document.querySelector('.main-display');\n      const mainDisplayObj = {\n        height: mainDisplay.clientHeight + 'px'\n      };\n      const loadAnime = anime({\n        targets: mainDisplayObj,\n        height: window.innerHeight - 48 + 'px',\n        duration: 4000,\n        easing: 'linear',\n        update: function () {\n          mainDisplay.style.height = mainDisplayObj.height;\n        }\n      });\n      return loadAnime;\n    };\n\n    this.revertMainDisplay = () => {\n      document.querySelector('.main-display').style.height = 'initial';\n    };\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"main-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"CryptoImage\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Fun way to encrypt messages to friends!\")), React.createElement(NavLink, {\n      to: \"/encode\",\n      onClick: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Encode\"), React.createElement(NavLink, {\n      to: \"/decode\",\n      onClick: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Decode\"), React.createElement(\"div\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/encode\",\n      render: props => React.createElement(Encode, Object.assign({}, props, {\n        encodeImg: this.encodeImg,\n        loadMainDisplayAnime: this.loadMainDisplayAnime,\n        revertMainDisplay: this.revertMainDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/decode\",\n      render: props => React.createElement(Decode, Object.assign({}, props, {\n        decodeMsg: this.decodeMsg,\n        loadMainDisplayAnime: this.loadMainDisplayAnime,\n        revertMainDisplay: this.revertMainDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      component: Redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))), React.createElement(\"svg\", {\n      className: \"border-curve\",\n      viewBox: \"0 0 1038 37\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M0 0h1038v37H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M173 21.82C112 2.78 56 2.264 0 19.246V37h1038V19.247c-61 19.04-117 19.554-173 2.572-61-19.04-117-19.554-173-2.572-61 19.04-117 19.554-173 2.572-61-19.04-117-19.554-173-2.572-61 19.04-117 19.554-173 2.572z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Display, {\n      receivedImg: this.state.receivedImg,\n      receivedMsg: this.state.receivedMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/CryptoImage/frontend/src/App.js"],"names":["React","Encode","Decode","BrowserRouter","Route","NavLink","Switch","Display","Redirect","anime","App","Component","state","receivedMsg","receivedImg","encodeImg","setState","decodeMsg","resetState","loadMainDisplayAnime","mainDisplay","document","querySelector","mainDisplayObj","height","clientHeight","loadAnime","targets","window","innerHeight","duration","easing","update","style","revertMainDisplay","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Encode from './Encode'\nimport Decode from './Decode'\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom'\nimport Display from './Display';\nimport Redirect from './Redirect';\nimport anime from 'animejs/lib/anime.es'\n\nclass App extends React.Component {\n  state = {\n    receivedMsg: '',\n    receivedImg: ''\n  }\n  // Way for Encode component to pass image to App component\n  encodeImg = (receivedImg) => {\n    this.setState({\n      receivedImg: receivedImg,\n    });\n  }\n  // Way for Decode component to pass message to App component\n  decodeMsg = (receivedMsg) => {\n    this.setState({\n      receivedMsg: receivedMsg,\n    });\n  }\n  resetState = () => {\n    this.setState({\n      receivedMsg: '',\n      receivedImg: ''\n    })\n  }\n  loadMainDisplayAnime = () => {\n    const mainDisplay = document.querySelector('.main-display');\n    const mainDisplayObj = {\n        height: mainDisplay.clientHeight + 'px'\n    }\n    const loadAnime = anime({\n        targets: mainDisplayObj,\n        height: (window.innerHeight - 48) + 'px',\n        duration: 4000,\n        easing: 'linear',\n        update: function() {\n            mainDisplay.style.height = mainDisplayObj.height;\n        }\n    });\n    return loadAnime;\n  }\n  revertMainDisplay = () => {\n    document.querySelector('.main-display').style.height = 'initial';\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <div id=\"App\">\n          <section className=\"main-display\">\n            <h1>CryptoImage</h1>\n            <p><em>Fun way to encrypt messages to friends!</em></p>\n            <NavLink to=\"/encode\" onClick={this.resetState}>Encode</NavLink>\n            <NavLink to=\"/decode\" onClick={this.resetState}>Decode</NavLink>\n            <div id=\"main\">\n              <Switch>\n                <Route path=\"/encode\" render={(props) => <Encode {...props} encodeImg={this.encodeImg} loadMainDisplayAnime={this.loadMainDisplayAnime} revertMainDisplay={this.revertMainDisplay}/>}/>\n                <Route path=\"/decode\" render={(props) => <Decode {...props} decodeMsg={this.decodeMsg} loadMainDisplayAnime={this.loadMainDisplayAnime} revertMainDisplay={this.revertMainDisplay}/>}/>\n                <Route path=\"/*\" component={Redirect}/>\n              </Switch>\n            </div>\n          </section>\n          <svg className=\"border-curve\" viewBox=\"0 0 1038 37\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h1038v37H0z\"/>\n            <path d=\"M173 21.82C112 2.78 56 2.264 0 19.246V37h1038V19.247c-61 19.04-117 19.554-173 2.572-61-19.04-117-19.554-173-2.572-61 19.04-117 19.554-173 2.572-61-19.04-117-19.554-173-2.572-61 19.04-117 19.554-173 2.572z\"/>\n            </svg>\n          <Display receivedImg={this.state.receivedImg} receivedMsg={this.state.receivedMsg}/>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}