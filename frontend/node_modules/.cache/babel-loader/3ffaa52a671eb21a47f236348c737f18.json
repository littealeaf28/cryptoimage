{"ast":null,"code":"var _jsxFileName = \"D:\\\\CryptoImage\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport Encode from './Encode';\nimport Decode from './Decode';\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom';\nimport Display from './Display';\nimport Redirect from './Redirect';\nimport anime from 'animejs/lib/anime.es';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      receivedMsg: '',\n      receivedImg: ''\n    };\n\n    this.encodeImg = receivedImg => {\n      this.setState({\n        receivedImg: receivedImg\n      });\n    };\n\n    this.decodeMsg = receivedMsg => {\n      this.setState({\n        receivedMsg: receivedMsg\n      });\n    };\n\n    this.resetState = () => {\n      this.setState({\n        receivedMsg: '',\n        receivedImg: ''\n      });\n    };\n\n    this.revertMainDisplay = originalHeight => {\n      const mainDisplay = document.querySelector('.main-display');\n      const mainDisplayObj = {\n        height: mainDisplay.offsetHeight + 'px'\n      };\n      anime({\n        targets: mainDisplayObj,\n        height: originalHeight + 'px',\n        duration: 1000,\n        update: function () {\n          mainDisplay.style.height = mainDisplayObj.height;\n        }\n      }); // document.querySelector('.main-display').style.height = 'initial';\n    };\n  }\n\n  // Have section 1 as main-display for now.. May change completely\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"main-display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"CryptoImage\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Fun way to encrypt messages to friends!\")), React.createElement(NavLink, {\n      to: \"/encode\",\n      onClick: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Encode\"), React.createElement(NavLink, {\n      to: \"/decode\",\n      onClick: this.resetState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Decode\"), React.createElement(\"div\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/encode\",\n      render: props => React.createElement(Encode, Object.assign({}, props, {\n        encodeImg: this.encodeImg,\n        revertMainDisplay: this.revertMainDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/decode\",\n      render: props => React.createElement(Decode, Object.assign({}, props, {\n        decodeMsg: this.decodeMsg,\n        revertMainDisplay: this.revertMainDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/*\",\n      component: Redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(\"svg\", {\n      className: \"curve-border\",\n      viewBox: \"0 0 1046 67\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      filter: \"url(#filter0_d)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M177 29C116-8 60-9 4 24v34.5h1038V24c-61 37-117 38-173 5-61-37-117-38-173-5-61 37-117 38-173 5-61-37-117-38-173-5-61 37-117 38-173 5z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"filter\", {\n      id: \"filter0_d\",\n      x: \"0\",\n      y: \".202\",\n      width: \"1046\",\n      height: \"66.298\",\n      filterUnits: \"userSpaceOnUse\",\n      \"color-interpolation-filters\": \"sRGB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"feFlood\", {\n      \"flood-opacity\": \"0\",\n      result: \"BackgroundImageFix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feColorMatrix\", {\n      in: \"SourceAlpha\",\n      values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feOffset\", {\n      dy: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feGaussianBlur\", {\n      stdDeviation: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feColorMatrix\", {\n      values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feBlend\", {\n      in2: \"BackgroundImageFix\",\n      result: \"effect1_dropShadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"feBlend\", {\n      in: \"SourceGraphic\",\n      in2: \"effect1_dropShadow\",\n      result: \"shape\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })))), React.createElement(Display, {\n      receivedImg: this.state.receivedImg,\n      receivedMsg: this.state.receivedMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {// mainDisplay.height = window.innerHeight;\n\n    /* const mainDisplay = document.querySelector('.main-display');\n    const mainDisplayColorsObj = {\n      leftR: 95,\n      leftG: 160,\n      leftB: 245\n    }\n    // mainDisplay.style.color = '#fff';\n    anime({\n      targets: mainDisplayColorsObj,\n      leftR: 126,\n      leftG: 163,\n      leftB: 197,\n      update: function() {\n        mainDisplay.style.background = linear-gradient(to right, rgb(leftR,leftG,leftB), rgb(126,163,197));;\n      }\n    }); */\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/CryptoImage/frontend/src/App.js"],"names":["React","Encode","Decode","BrowserRouter","Route","NavLink","Switch","Display","Redirect","anime","App","Component","state","receivedMsg","receivedImg","encodeImg","setState","decodeMsg","resetState","revertMainDisplay","originalHeight","mainDisplay","document","querySelector","mainDisplayObj","height","offsetHeight","targets","duration","update","style","render","props","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Encode from './Encode'\nimport Decode from './Decode'\nimport { BrowserRouter, Route, NavLink, Switch } from 'react-router-dom'\nimport Display from './Display';\nimport Redirect from './Redirect';\nimport anime from 'animejs/lib/anime.es'\n\nclass App extends React.Component {\n  state = {\n    receivedMsg: '',\n    receivedImg: ''\n  }\n  // Way for Encode component to pass image to App component\n  encodeImg = (receivedImg) => {\n    this.setState({\n      receivedImg: receivedImg,\n    });\n  }\n  // Way for Decode component to pass message to App component\n  decodeMsg = (receivedMsg) => {\n    this.setState({\n      receivedMsg: receivedMsg,\n    });\n  }\n  resetState = () => {\n    this.setState({\n      receivedMsg: '',\n      receivedImg: ''\n    })\n  }\n  revertMainDisplay = (originalHeight) => {\n    const mainDisplay = document.querySelector('.main-display');\n    const mainDisplayObj = {\n        height: mainDisplay.offsetHeight + 'px'\n    }\n    anime({\n        targets: mainDisplayObj,\n        height: originalHeight + 'px',\n        duration: 1000,\n        update: function() {\n            mainDisplay.style.height = mainDisplayObj.height;\n        }\n    });\n    // document.querySelector('.main-display').style.height = 'initial';\n  }\n  // Have section 1 as main-display for now.. May change completely\n  render() {\n    return (\n      <BrowserRouter>\n        <div id=\"App\">\n          <section className=\"main-display\">\n            <h1>CryptoImage</h1>\n            <p><em>Fun way to encrypt messages to friends!</em></p>\n            <NavLink to=\"/encode\" onClick={this.resetState}>Encode</NavLink>\n            <NavLink to=\"/decode\" onClick={this.resetState}>Decode</NavLink>\n            <div id=\"main\">\n              <Switch>\n                <Route path=\"/encode\" render={(props) => <Encode {...props} encodeImg={this.encodeImg} revertMainDisplay={this.revertMainDisplay}/>}/>\n                <Route path=\"/decode\" render={(props) => <Decode {...props} decodeMsg={this.decodeMsg} revertMainDisplay={this.revertMainDisplay}/>}/>\n                <Route path=\"/*\" component={Redirect}/>\n              </Switch>\n            </div>\n          </section>\n          <svg className=\"curve-border\" viewBox=\"0 0 1046 67\" xmlns=\"http://www.w3.org/2000/svg\"><g filter=\"url(#filter0_d)\"><path d=\"M177 29C116-8 60-9 4 24v34.5h1038V24c-61 37-117 38-173 5-61-37-117-38-173-5-61 37-117 38-173 5-61-37-117-38-173-5-61 37-117 38-173 5z\"/></g><defs><filter id=\"filter0_d\" x=\"0\" y=\".202\" width=\"1046\" height=\"66.298\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/><feOffset dy=\"4\"/><feGaussianBlur stdDeviation=\"2\"/><feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/><feBlend in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/></filter></defs></svg>\n          <Display receivedImg={this.state.receivedImg} receivedMsg={this.state.receivedMsg}/>\n        </div>\n      </BrowserRouter>\n    )\n  }\n  componentDidMount() {\n    // mainDisplay.height = window.innerHeight;\n    /* const mainDisplay = document.querySelector('.main-display');\n    const mainDisplayColorsObj = {\n      leftR: 95,\n      leftG: 160,\n      leftB: 245\n    }\n    // mainDisplay.style.color = '#fff';\n    anime({\n      targets: mainDisplayColorsObj,\n      leftR: 126,\n      leftG: 163,\n      leftB: 197,\n      update: function() {\n        mainDisplay.style.background = linear-gradient(to right, rgb(leftR,leftG,leftB), rgb(126,163,197));;\n      }\n    }); */\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}