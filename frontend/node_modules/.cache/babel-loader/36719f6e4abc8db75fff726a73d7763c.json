{"ast":null,"code":"var _jsxFileName = \"D:\\\\CryptoImage\\\\cryptoimage\\\\src\\\\Encode.js\";\nimport React from 'react';\n\nclass Encode extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageURI: null\n    };\n\n    this.getImage = e => {\n      const reader = new FileReader();\n      const imageFile = e.target.files[0];\n\n      if (imageFile) {\n        reader.readAsDataURL(imageFile);\n        imageUpdateUI.classList.ad;\n      }\n\n      console.log(e.target.files[0]);\n      console.log(this.state);\n      reader.addEventListener('load', function () {\n        this.setState({\n          imageURI: reader.result\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.getImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Cannot render image\",\n      id: \"image-preview\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Encode;","map":{"version":3,"sources":["D:/CryptoImage/cryptoimage/src/Encode.js"],"names":["React","Encode","Component","state","imageURI","getImage","e","reader","FileReader","imageFile","target","files","readAsDataURL","imageUpdateUI","classList","ad","console","log","addEventListener","setState","result","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADyB;;AAAA,SAIjCC,QAJiC,GAIrBC,CAAD,IAAO;AACd,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,YAAMC,SAAS,GAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;;AAEA,UAAIF,SAAJ,EAAe;AACXF,QAAAA,MAAM,CAACK,aAAP,CAAqBH,SAArB;AACAI,QAAAA,aAAa,CAACC,SAAd,CAAwBC,EAAxB;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYX,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AAEAI,MAAAA,MAAM,CAACW,gBAAP,CAAwB,MAAxB,EAAgC,YAAW;AACvC,aAAKC,QAAL,CAAc;AACVf,UAAAA,QAAQ,EAAEG,MAAM,CAACa;AADP,SAAd;AAIH,OALD;AAMH,KArBgC;AAAA;;AAsBjCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,SAA1B;AAAoC,MAAA,QAAQ,EAAE,KAAKhB,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAC,qBAAhB;AAAsC,MAAA,EAAE,EAAC,eAAzC;AAAyD,MAAA,SAAS,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA7BgC;;AAgCrC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Encode extends React.Component {\r\n    state = {\r\n        imageURI: null\r\n    }\r\n    getImage = (e) => {\r\n        const reader = new FileReader();\r\n        const imageFile = e.target.files[0];\r\n\r\n        if (imageFile) {\r\n            reader.readAsDataURL(imageFile);\r\n            imageUpdateUI.classList.ad\r\n        }\r\n        console.log(e.target.files[0]);\r\n        console.log(this.state);\r\n\r\n        reader.addEventListener('load', function() {\r\n            this.setState({\r\n                imageURI: reader.result\r\n            })\r\n\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" accept=\"image/*\" onChange={this.getImage}></input>\r\n                <img src=\"\" alt=\"Cannot render image\" id=\"image-preview\" className=\"hidden\"/>\r\n            </div>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default Encode;"]},"metadata":{},"sourceType":"module"}